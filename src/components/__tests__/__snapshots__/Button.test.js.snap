// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders button with color 1`] = `
<View
  style={
    Object {
      "backgroundColor": "transparent",
      "borderColor": "transparent",
      "borderRadius": 4,
      "borderStyle": "solid",
      "borderWidth": 0,
      "elevation": 0,
      "minWidth": 64,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityStates={Array []}
    accessible={true}
    focusable={false}
    isTVSelectable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "overflow": "hidden",
        },
        Object {
          "borderRadius": 4,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
          undefined,
        ]
      }
    >
      <Text
        numberOfLines={1}
        style={
          Array [
            Object {
              "color": "#000000",
              "fontFamily": "System",
              "fontWeight": "400",
              "textAlign": "left",
            },
            Array [
              Object {
                "letterSpacing": 1,
                "marginHorizontal": 16,
                "marginVertical": 9,
                "textAlign": "center",
              },
              undefined,
              Object {
                "textTransform": "uppercase",
              },
              Object {
                "color": "#e91e63",
                "fontFamily": "System",
                "fontWeight": "500",
              },
              Object {
                "fontFamily": "System",
                "fontWeight": "500",
              },
              undefined,
            ],
          ]
        }
      >
        Custom Button
      </Text>
    </View>
  </View>
</View>
`;

exports[`renders button with custom testID 1`] = `
<View
  style={
    Object {
      "backgroundColor": "transparent",
      "borderColor": "transparent",
      "borderRadius": 4,
      "borderStyle": "solid",
      "borderWidth": 0,
      "elevation": 0,
      "minWidth": 64,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityStates={Array []}
    accessible={true}
    focusable={false}
    isTVSelectable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "overflow": "hidden",
        },
        Object {
          "borderRadius": 4,
        },
      ]
    }
    testID="custom:testID"
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
          undefined,
        ]
      }
    >
      <Text
        numberOfLines={1}
        style={
          Array [
            Object {
              "color": "#000000",
              "fontFamily": "System",
              "fontWeight": "400",
              "textAlign": "left",
            },
            Array [
              Object {
                "letterSpacing": 1,
                "marginHorizontal": 16,
                "marginVertical": 9,
                "textAlign": "center",
              },
              undefined,
              Object {
                "textTransform": "uppercase",
              },
              Object {
                "color": "#6200ee",
                "fontFamily": "System",
                "fontWeight": "500",
              },
              Object {
                "fontFamily": "System",
                "fontWeight": "500",
              },
              undefined,
            ],
          ]
        }
      >
        Button with custom testID
      </Text>
    </View>
  </View>
</View>
`;

exports[`renders button with icon 1`] = `
<View
  style={
    Object {
      "backgroundColor": "transparent",
      "borderColor": "transparent",
      "borderRadius": 4,
      "borderStyle": "solid",
      "borderWidth": 0,
      "elevation": 0,
      "minWidth": 64,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityStates={Array []}
    accessible={true}
    focusable={false}
    isTVSelectable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "overflow": "hidden",
        },
        Object {
          "borderRadius": 4,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Object {
            "marginLeft": 12,
            "marginRight": -4,
            "width": 16,
          }
        }
      >
        <Text
          accessibilityElementsHidden={true}
          allowFontScaling={false}
          importantForAccessibility="no-hide-descendants"
          pointerEvents="none"
          style={
            Array [
              Object {
                "color": "#6200ee",
                "fontSize": 16,
              },
              Array [
                Object {
                  "transform": Array [
                    Object {
                      "scaleX": 1,
                    },
                  ],
                },
                Object {
                  "backgroundColor": "transparent",
                },
              ],
              Object {
                "fontFamily": "Material Design Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          ï„€
        </Text>
      </View>
      <Text
        numberOfLines={1}
        style={
          Array [
            Object {
              "color": "#000000",
              "fontFamily": "System",
              "fontWeight": "400",
              "textAlign": "left",
            },
            Array [
              Object {
                "letterSpacing": 1,
                "marginHorizontal": 16,
                "marginVertical": 9,
                "textAlign": "center",
              },
              undefined,
              Object {
                "textTransform": "uppercase",
              },
              Object {
                "color": "#6200ee",
                "fontFamily": "System",
                "fontWeight": "500",
              },
              Object {
                "fontFamily": "System",
                "fontWeight": "500",
              },
              undefined,
            ],
          ]
        }
      >
        Icon Button
      </Text>
    </View>
  </View>
</View>
`;

exports[`renders contained contained with mode 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#6200ee",
      "borderColor": "transparent",
      "borderRadius": 4,
      "borderStyle": "solid",
      "borderWidth": 0,
      "elevation": 2,
      "minWidth": 64,
      "shadowColor": "#000000",
      "shadowOffset": Object {
        "height": 0.75,
        "width": 0,
      },
      "shadowOpacity": 0.24,
      "shadowRadius": 1.5,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityStates={Array []}
    accessible={true}
    focusable={false}
    isTVSelectable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "overflow": "hidden",
        },
        Object {
          "borderRadius": 4,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
          undefined,
        ]
      }
    >
      <Text
        numberOfLines={1}
        style={
          Array [
            Object {
              "color": "#000000",
              "fontFamily": "System",
              "fontWeight": "400",
              "textAlign": "left",
            },
            Array [
              Object {
                "letterSpacing": 1,
                "marginHorizontal": 16,
                "marginVertical": 9,
                "textAlign": "center",
              },
              undefined,
              Object {
                "textTransform": "uppercase",
              },
              Object {
                "color": "#ffffff",
                "fontFamily": "System",
                "fontWeight": "500",
              },
              Object {
                "fontFamily": "System",
                "fontWeight": "500",
              },
              undefined,
            ],
          ]
        }
      >
        Contained Button
      </Text>
    </View>
  </View>
</View>
`;

exports[`renders disabled button 1`] = `
<View
  style={
    Object {
      "backgroundColor": "transparent",
      "borderColor": "transparent",
      "borderRadius": 4,
      "borderStyle": "solid",
      "borderWidth": 0,
      "elevation": 0,
      "minWidth": 64,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityStates={
      Array [
        "disabled",
      ]
    }
    accessible={true}
    focusable={false}
    isTVSelectable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "overflow": "hidden",
        },
        Object {
          "borderRadius": 4,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
          undefined,
        ]
      }
    >
      <Text
        numberOfLines={1}
        style={
          Array [
            Object {
              "color": "#000000",
              "fontFamily": "System",
              "fontWeight": "400",
              "textAlign": "left",
            },
            Array [
              Object {
                "letterSpacing": 1,
                "marginHorizontal": 16,
                "marginVertical": 9,
                "textAlign": "center",
              },
              undefined,
              Object {
                "textTransform": "uppercase",
              },
              Object {
                "color": "rgba(0, 0, 0, 0.32)",
                "fontFamily": "System",
                "fontWeight": "500",
              },
              Object {
                "fontFamily": "System",
                "fontWeight": "500",
              },
              undefined,
            ],
          ]
        }
      >
        Disabled Button
      </Text>
    </View>
  </View>
</View>
`;

exports[`renders loading button 1`] = `
<View
  style={
    Object {
      "backgroundColor": "transparent",
      "borderColor": "transparent",
      "borderRadius": 4,
      "borderStyle": "solid",
      "borderWidth": 0,
      "elevation": 0,
      "minWidth": 64,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityStates={Array []}
    accessible={true}
    focusable={false}
    isTVSelectable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "overflow": "hidden",
        },
        Object {
          "borderRadius": 4,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "justifyContent": "center",
            },
            Object {
              "marginLeft": 12,
              "marginRight": -4,
              "width": 16,
            },
          ]
        }
      >
        <View
          style={
            Object {
              "height": 16,
              "opacity": 1,
              "width": 16,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "bottom": 0,
                "justifyContent": "center",
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          >
            <View
              style={
                Object {
                  "height": 16,
                  "transform": Array [
                    Object {
                      "rotate": "45deg",
                    },
                  ],
                  "width": 16,
                }
              }
            >
              <View
                collapsable={false}
                style={
                  Object {
                    "height": 8,
                    "overflow": "hidden",
                    "width": 16,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "height": 16,
                      "transform": Array [
                        Object {
                          "translateY": 0,
                        },
                        Object {
                          "rotate": "-165deg",
                        },
                      ],
                      "width": 16,
                    }
                  }
                >
                  <View
                    collapsable={false}
                    style={
                      Object {
                        "height": 8,
                        "overflow": "hidden",
                        "width": 16,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "borderColor": "#6200ee",
                          "borderRadius": 8,
                          "borderWidth": 1.6,
                          "height": 16,
                          "width": 16,
                        }
                      }
                    />
                  </View>
                </View>
              </View>
            </View>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "bottom": 0,
                "justifyContent": "center",
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          >
            <View
              style={
                Object {
                  "height": 16,
                  "transform": Array [
                    Object {
                      "rotate": "45deg",
                    },
                  ],
                  "width": 16,
                }
              }
            >
              <View
                collapsable={false}
                style={
                  Object {
                    "height": 8,
                    "overflow": "hidden",
                    "top": 8,
                    "width": 16,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "height": 16,
                      "transform": Array [
                        Object {
                          "translateY": -8,
                        },
                        Object {
                          "rotate": "345deg",
                        },
                      ],
                      "width": 16,
                    }
                  }
                >
                  <View
                    collapsable={false}
                    style={
                      Object {
                        "height": 8,
                        "overflow": "hidden",
                        "width": 16,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "borderColor": "#6200ee",
                          "borderRadius": 8,
                          "borderWidth": 1.6,
                          "height": 16,
                          "width": 16,
                        }
                      }
                    />
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <Text
        numberOfLines={1}
        style={
          Array [
            Object {
              "color": "#000000",
              "fontFamily": "System",
              "fontWeight": "400",
              "textAlign": "left",
            },
            Array [
              Object {
                "letterSpacing": 1,
                "marginHorizontal": 16,
                "marginVertical": 9,
                "textAlign": "center",
              },
              undefined,
              Object {
                "textTransform": "uppercase",
              },
              Object {
                "color": "#6200ee",
                "fontFamily": "System",
                "fontWeight": "500",
              },
              Object {
                "fontFamily": "System",
                "fontWeight": "500",
              },
              undefined,
            ],
          ]
        }
      >
        Loading Button
      </Text>
    </View>
  </View>
</View>
`;

exports[`renders outlined button with mode 1`] = `
<View
  style={
    Object {
      "backgroundColor": "transparent",
      "borderColor": "rgba(0, 0, 0, 0.29)",
      "borderRadius": 4,
      "borderStyle": "solid",
      "borderWidth": 0.5,
      "elevation": 0,
      "minWidth": 64,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityStates={Array []}
    accessible={true}
    focusable={false}
    isTVSelectable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "overflow": "hidden",
        },
        Object {
          "borderRadius": 4,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
          undefined,
        ]
      }
    >
      <Text
        numberOfLines={1}
        style={
          Array [
            Object {
              "color": "#000000",
              "fontFamily": "System",
              "fontWeight": "400",
              "textAlign": "left",
            },
            Array [
              Object {
                "letterSpacing": 1,
                "marginHorizontal": 16,
                "marginVertical": 9,
                "textAlign": "center",
              },
              undefined,
              Object {
                "textTransform": "uppercase",
              },
              Object {
                "color": "#6200ee",
                "fontFamily": "System",
                "fontWeight": "500",
              },
              Object {
                "fontFamily": "System",
                "fontWeight": "500",
              },
              undefined,
            ],
          ]
        }
      >
        Outlined Button
      </Text>
    </View>
  </View>
</View>
`;

exports[`renders text button by default 1`] = `
<View
  style={
    Object {
      "backgroundColor": "transparent",
      "borderColor": "transparent",
      "borderRadius": 4,
      "borderStyle": "solid",
      "borderWidth": 0,
      "elevation": 0,
      "minWidth": 64,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityStates={Array []}
    accessible={true}
    focusable={false}
    isTVSelectable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "overflow": "hidden",
        },
        Object {
          "borderRadius": 4,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
          undefined,
        ]
      }
    >
      <Text
        numberOfLines={1}
        style={
          Array [
            Object {
              "color": "#000000",
              "fontFamily": "System",
              "fontWeight": "400",
              "textAlign": "left",
            },
            Array [
              Object {
                "letterSpacing": 1,
                "marginHorizontal": 16,
                "marginVertical": 9,
                "textAlign": "center",
              },
              undefined,
              Object {
                "textTransform": "uppercase",
              },
              Object {
                "color": "#6200ee",
                "fontFamily": "System",
                "fontWeight": "500",
              },
              Object {
                "fontFamily": "System",
                "fontWeight": "500",
              },
              undefined,
            ],
          ]
        }
      >
        Text Button
      </Text>
    </View>
  </View>
</View>
`;

exports[`renders text button with mode 1`] = `
<View
  style={
    Object {
      "backgroundColor": "transparent",
      "borderColor": "transparent",
      "borderRadius": 4,
      "borderStyle": "solid",
      "borderWidth": 0,
      "elevation": 0,
      "minWidth": 64,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityStates={Array []}
    accessible={true}
    focusable={false}
    isTVSelectable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "overflow": "hidden",
        },
        Object {
          "borderRadius": 4,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
          undefined,
        ]
      }
    >
      <Text
        numberOfLines={1}
        style={
          Array [
            Object {
              "color": "#000000",
              "fontFamily": "System",
              "fontWeight": "400",
              "textAlign": "left",
            },
            Array [
              Object {
                "letterSpacing": 1,
                "marginHorizontal": 16,
                "marginVertical": 9,
                "textAlign": "center",
              },
              undefined,
              Object {
                "textTransform": "uppercase",
              },
              Object {
                "color": "#6200ee",
                "fontFamily": "System",
                "fontWeight": "500",
              },
              Object {
                "fontFamily": "System",
                "fontWeight": "500",
              },
              undefined,
            ],
          ]
        }
      >
        Text Button
      </Text>
    </View>
  </View>
</View>
`;
